class Triangle
  attr_reader :x, :y, :z
  def initialize(side1, side2, side3)
    @x = side1
    @y = side2
    @x = side3
  end

  class TriangleError < StandardError
  end

  def positive_sides (x,y,z)
    pos=true 
    pos=false if x<1
    pos=false if y<1
    pos=false if z<1
    pos
  end

  def is_triangle (x,y,z)
    x+y > z && y+z > x && z+x > y
  end

  def validate_triangle (x,y,z)
    vt=true
    vt =false if positive_sides(x,y,z) ==false
    vt=false if is_triangle(x,y,z) == false
    raise TriangleError if vt == false
  end
  
  def kind
    validate_triangle
    if x == y && y == z && x==z
      :equilateral
    elsif x == y || y == z || x == z
      :isosceles
    else
      :scalene
    end
  end
end

def positive_sides(a,b,c)
  pos=true 
  pos=false if a<0
  pos=false if b<0
  pos=false if c<0
  pos
end

def is_triangle (a,b,c)
  a+b > c && b+c > a && c+a > b
end

# def validate_triangle(a,b,c)
#   vt=true
#   vt =false if positive_sides ==false
#   vt=false if is_triangle == false
#   raise TriangleError if vt == false
# end

a=0.4
b=0.6
c=0.3

p positive_sides(a,b,c)
p is_triangle(a,b,c)
# validate_triangle(a,b,c)